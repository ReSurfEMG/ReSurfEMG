name: Release

on:
  push:
    tags:
      - v*

jobs:
  PyPIBuild:
    if: ${{ github.repository == 'resurfemg/resurfemg' }}
    name: Tagged Release
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
          submodules: recursive
        # Unfortunately, wheel will try to do setup.py install to
        # build a wheel... and we need this stuff to be able to build
        # for CPython.
      
      - name: Set up Python 3.9
        uses: actions/setup-python@v1
        with:
          python-version: 3.9
      - run: python3.9 -m venv .venv
      - run: .venv/bin/python -m pip install build wheel twine
      - run: .venv/bin/python -m build
      # - run: .venv/bin/python setup.py bdist_egg
      - run: >-
          TWINE_USERNAME=__token__
          TWINE_PASSWORD=${{ secrets.PYPI_TOKEN }}
          .venv/bin/python -m twine upload --skip-existing ./dist/*.whl
      - uses: actions/upload-artifact@v2
        with:
          name: pypi-build
          path: dist/*

  # CondaBuild:
  #   runs-on: ${{ matrix.os }}
  #   strategy:
  #     fail-fast: false
  #     matrix:
  #       python-version: [3.9]
  #       os: [ubuntu-latest, windows-latest, macos-latest]
  #   steps:
  #     - uses: actions/checkout@v2
  #       with:
  #         submodules: recursive
  #         fetch-depth: 0
  #     - uses: s-weigand/setup-conda@v1.1.1
  #       with:
  #         conda-channels: conda-forge
  #         python-version: ${{ matrix.python-version }}
  #     - run: conda config --remove channels defaults
  #     - name: Generate conda meta.yaml (Python 3.9)
  #       run: python -u setup.py anaconda_gen_meta
  #     - name: Generate package archive
  #       run: python -u setup.py bdist_conda -b
  #     - name: Upload Anaconda package
  #       run: >-
  #         python setup.py anaconda_upload
  #         --token=${{ secrets.ANACONDA_TOKEN }}
  #         --package=./dist/*/*.tar.bz2
  #     - uses: actions/upload-artifact@v2
  #       with:
  #         name: conda-build-${{ matrix.os }}-${{ matrix.python-version }}
  #         path: dist/*/*.tar.bz2

  PublishArtifacts:
    runs-on: ubuntu-latest
    needs: [PyPIBuild]
    steps:
      - uses: actions/download-artifact@v2
        with:
          path: dist
      - uses: marvinpinto/action-automatic-releases@latest
        with:
          repo_token: "${{ secrets.GITHUBTOKEN }}"
          prerelease: false
          files: |
            ./dist/*/linux-64/resurfemg-*.tar.bz2
            ./dist/*/osx-64/resurfemg-*.tar.bz2
            ./dist/*/win-64/resurfemg-*.tar.bz2
            ./dist/pypi-build/*.whl
