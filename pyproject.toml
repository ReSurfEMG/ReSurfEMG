[build-system]
requires = ["setuptools>=64", "setuptools-scm>=8"]
build-backend = "setuptools.build_meta"

[project]
name = "resurfemg"
maintainers = [
    {name = "Eline Mos-Oppersma", email = "e.oppersma@utwente.nl"},
    {name = "Rob Warnaar", email = "r.s.p.warnaar@utwente.nl"},
]
description = "A package for analysis of respiratory EMG data"
requires-python = ">3.9"
keywords = ["electromyography", "EMG", "respiratory", "Python", "surface EMG"]
license = {text = "Apache-2.0"}
classifiers = [
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "License :: OSI Approved :: Apache Software License",
    "Operating System :: OS Independent",
]
dependencies = [
    'pyxdf',
    'mne>=0.23.4',
    'textdistance',
    'pandas',
    'scipy',
    'matplotlib',
    'h5py',
    'numpy>=1.24.4',
    'scikit-learn>=1.3.1',
]
readme = "README.md"
dynamic = ["version"]

[project.urls]
Homepage = "https://github.com/ReSurfEMG"
Documentation = "https://resurfemg.github.io/ReSurfEMG/"
Repository = "https://github.com/ReSurfEMG/ReSurfEMG"
Issues = "https://github.com/ReSurfEMG/ReSurfEMG/issues"
Changelog = "https://github.com/ReSurfEMG/ReSurfEMG/blob/main/CHANGELOG.md"

[project.optional-dependencies]
tests = ['pytest', 
         'pytest-cov',
         'pycodestyle', 
         'isort',
         'wheel']
docs = ['wheel',
        'sphinx']
dev = ['pytest', 
       'pytest-cov',
       'pycodestyle', 
       'isort', 
       'wheel', 
       'jupyter', 
       'ipympl',
       'sphinx',
       'twine']

[tool.setuptools]
packages = ['resurfemg',
            'resurfemg.cli',
            'resurfemg.config',
            'resurfemg.data_connector',
            'resurfemg.helper_functions',
            'resurfemg.machine_learning',
            'resurfemg.pipelines',
            'resurfemg.postprocessing',
            'resurfemg.preprocessing',
            'resurfemg.visualization']
license-files = ["LICENSE"]


[tool.setuptools_scm]
version_file = "resurfemg/__version__.py"

[tool.pytest.ini_options]
testpaths = [
    "tests", 
]
     
